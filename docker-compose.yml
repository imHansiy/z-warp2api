services:
  warp2api:
    build: .
    container_name: warp2api-production
    restart: unless-stopped
    ports:
      - "8000:8000"  # Warp2API主服务
      - "8080:8080"  # OpenAI兼容API
      - "8019:8019"  # 账号池服务
      - "9090:9090"  # 监控指标端口（如果启用）
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./config:/app/config
    env_file:
      - ./config/production.env
    environment:
      # 基础配置
      - PYTHONUNBUFFERED=1
      
      # 覆盖配置文件中的某些设置（用于Docker环境）
      - POOL_SERVICE_URL=http://0.0.0.0:8019
      - USE_POOL_SERVICE=true
      - WARP_BRIDGE_URL=http://0.0.0.0:8000
      - WARP_API_HOST=0.0.0.0
      - HOST=0.0.0.0
      
    networks:
      - warp2api-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # 可选：添加Nginx反向代理（暂时禁用，需要配置文件和SSL证书）
  # nginx:
  #   image: nginx:alpine
  #   container_name: warp2api-nginx
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - warp2api
  #   networks:
  #     - warp2api-network

networks:
  warp2api-network:
    driver: bridge
